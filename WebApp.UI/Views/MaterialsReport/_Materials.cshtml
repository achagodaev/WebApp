@model WebApp.UI.ViewModels.ReportViewModels.MaterialsReportViewModel
@using WebApp.UI.Models
@using WebApp.UI.Controllers

<div class="row">
    <div class="col-md-12">
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedMaterialId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="btn-group">
                        @if (Model.SelectedMaterialId == 0)
                        {
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Выберите материал
                                <span class="caret"></span>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @Model.Materials[Model.SelectedMaterialId]
                                <span class="caret"></span>
                            </button>
                        }
                        <ul class="dropdown-menu">
                            @foreach (var material in Model.Materials)
                            {
                                <li>
                                    <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#materials"
                                       href="@Url.Action(nameof(MaterialsReportController._Materials), new { productId = Model.SelectedProductId, supplierId = Model.SelectedSupplierId, materialId = material.Key })">
                                        @material.Value
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedProductId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @Model.Products[Model.SelectedProductId]
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var product in Model.Products)
                            {
                                <li>
                                    <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#materials"
                                       href="@Url.Action(nameof(MaterialsReportController._Materials), new { productId = product.Key, supplierId = Model.SelectedSupplierId, materialId = Model.SelectedMaterialId })">
                                        @product.Value
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedSupplierId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @Model.Suppliers[Model.SelectedSupplierId]
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var supplier in Model.Suppliers)
                            {
                                <li>
                                    <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#materials"
                                       href="@Url.Action(nameof(MaterialsReportController._Materials), new { productId = Model.SelectedProductId, supplierId = supplier.Key, materialId = Model.SelectedMaterialId })">
                                        @supplier.Value
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Заказы", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (Model.OrderProductMaterials.Any())
                    {
                        var orders = Model.OrderProductMaterials.GroupBy(opm => opm.OrderId);

                        if (orders.Any())
                        {
                            var orderIndex = 0;

                            foreach (var order in orders)
                            {
                                orderIndex++;

                                <table class="table table-condensed table-bordered">
                                    <tr class="active">
                                        <th>
                                            @orderIndex. @Model.Orders[order.Key]
                                        </th>
                                    </tr>
                                </table>

                                <div class="form-group">
                                    @Html.Label("Продукция", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">

                                        @{
                                            var products = order.GroupBy(o => o.ProductId);

                                            <table class="table table-condensed table-bordered">
                                                <tr class="active">
                                                    <th rowspan="2">Наименование</th>
                                                    <th colspan="5">Материал</th>
                                                </tr>
                                                <tr class="active">
                                                    <th>Норма расхода</th>
                                                    <th>Расход</th>
                                                    <th>Поставщик</th>
                                                    <th>Цена</th>
                                                    <th>Сумма</th>
                                                </tr>

                                                @if (products.Any())
                                                {
                                                    foreach (var product in products)
                                                    {
                                                        var orderProductMaterial = Model.OrderProductMaterials
                                                            .Single(opm => opm.OrderId == order.Key
                                                            && opm.ProductId == product.Key
                                                            && opm.MaterialId == Model.SelectedMaterialId);

                                                        var orderProductQuantity = orderProductMaterial.OrderProduct.OrderProductAddresses
                                                            .SelectMany(opa => opa.OrderProductAddressSizes)
                                                            .Sum(opas => opas.Quantity);

                                                        var orderProductMaterialQuantity = orderProductQuantity * orderProductMaterial.Rate;
                                                        var orderProductMaterialPrice = (decimal)(orderProductQuantity * orderProductMaterial.Rate) * orderProductMaterial.Price;

                                                        <tr>
                                                            <td>
                                                                @Model.Products[product.Key]
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => orderProductMaterial.Rate)
                                                            </td>
                                                            <td>
                                                                @orderProductMaterialQuantity
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => orderProductMaterial.Supplier.Name)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => orderProductMaterial.Price)
                                                            </td>
                                                            <td>
                                                                @orderProductMaterialPrice
                                                            </td>
                                                        </tr>
                                                    }

                                                    <tr class="active">
                                                        <th>
                                                            Всего: @products.Count()
                                                        </th>
                                                        <th></th>
                                                        <th>
                                                            @products.Sum(p => p.Sum(opm => opm.OrderProduct.OrderProductAddresses
                                                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                                                .Sum(opas => opas.Quantity) * opm.Rate))
                                                        </th>
                                                        <th colspan="2"></th>
                                                        <th>
                                                            @products.Sum(p => p.Sum(opm => (decimal)(opm.OrderProduct.OrderProductAddresses
                                                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                                                .Sum(opas => opas.Quantity) * opm.Rate) * opm.Price))
                                                        </th>
                                                    </tr>
                                                }
                                                else
                                                {
                                                    <tr class="active">
                                                        <td colspan="6">Нет продукции</td>
                                                    </tr>
                                                }

                                            </table>
                                        }

                                    </div>
                                </div>
                            }

                            <table class="table table-condensed table-bordered">
                                <tr class="active">
                                    <th>Всего</th>
                                </tr>
                            </table>

                            <div class="form-group">
                                @Html.Label("Продукция", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @{
                                        var _materials = Model.OrderProductMaterials.GroupBy(opm => opm.ProductId);

                                        <table class="table table-condensed table-bordered">
                                            <tr class="active">
                                                <th rowspan="2">Наименование</th>
                                                <th colspan="2">Материал</th>
                                            </tr>
                                            <tr class="active">
                                                <th>Расход</th>
                                                <th>Сумма</th>
                                            </tr>

                                            @if (_materials.Any())
                                            {
                                                foreach (var _material in _materials)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Model.Products[_material.Key]
                                                        </td>
                                                        <td>
                                                            @_material.Sum(opm => opm.OrderProduct.OrderProductAddresses
                                                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                                                .Sum(opas => opas.Quantity) * opm.Rate)
                                                        </td>
                                                        <td>
                                                            @_material.Sum(opm => (decimal)(opm.OrderProduct.OrderProductAddresses
                                                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                                                .Sum(opas => opas.Quantity) * opm.Rate) * opm.Price)
                                                        </td>
                                                    </tr>
                                                }

                                                <tr class="active">
                                                    <th>
                                                        Всего: @_materials.Count()
                                                    </th>
                                                    <th>
                                                        @_materials.Sum(p => p.Sum(opm => opm.OrderProduct.OrderProductAddresses
                                                            .SelectMany(opa => opa.OrderProductAddressSizes)
                                                            .Sum(opas => opas.Quantity) * opm.Rate))
                                                    </th>
                                                    <th>
                                                        @_materials.Sum(p => p.Sum(opm => (decimal)(opm.OrderProduct.OrderProductAddresses
                                                            .SelectMany(opa => opa.OrderProductAddressSizes)
                                                            .Sum(opas => opas.Quantity) * opm.Rate) * opm.Price))
                                                    </th>
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr class="active">
                                                    <td colspan="2">Нет материалов</td>
                                                </tr>
                                            }

                                        </table>
                                    }

                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <table class="table table-condensed table-bordered">
                            <tr class="active">
                                <td>Нет заказов</td>
                            </tr>
                        </table>
                    }

                </div>
            </div>

        </div>
    </div>
</div>
