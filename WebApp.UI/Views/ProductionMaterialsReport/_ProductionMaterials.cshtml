@model WebApp.UI.ViewModels.ReportViewModels.ProductionMaterialsReportViewModel
@using WebApp.UI.Models
@using WebApp.UI.Controllers

<div class="row">
    <div class="col-md-12">
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="btn-group">
                        @if (Model.SelectedOrderId == 0)
                        {
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Выберите заказ
                                <span class="caret"></span>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @Model.Orders[Model.SelectedOrderId]
                                <span class="caret"></span>
                            </button>
                        }
                        <ul class="dropdown-menu">
                            @foreach (var order in Model.Orders)
                            {
                                <li>
                                    <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#productionMaterials"
                                       href="@Url.Action(nameof(ProductionMaterialsReportController._ProductionMaterials), new { orderId = order.Key, sortColumn = Model.SelectedSortColumn })">
                                        @order.Value
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            @if (Model.OrderProducts.Any())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedSortColumn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="btn-group">
                            @if (Model.SelectedSortColumn == "name")
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#productionMaterials" class="btn btn-primary"
                                   href="@Url.Action(nameof(ProductionMaterialsReportController._ProductionMaterials), new { orderId = Model.SelectedOrderId, sortColumn = "name" })">
                                    Наименование
                                </a>

                            }
                            else
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#productionMaterials" class="btn btn-default"
                                   href="@Url.Action(nameof(ProductionMaterialsReportController._ProductionMaterials), new { orderId = Model.SelectedOrderId, sortColumn = "name" })">
                                    Наименование
                                </a>
                            }

                            @if (Model.SelectedSortColumn == "difference")
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#productionMaterials" class="btn btn-primary"
                                   href="@Url.Action(nameof(ProductionMaterialsReportController._ProductionMaterials), new { orderId = Model.SelectedOrderId, sortColumn = "difference" })">
                                    +/-
                                </a>

                            }
                            else
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#productionMaterials" class="btn btn-default"
                                   href="@Url.Action(nameof(ProductionMaterialsReportController._ProductionMaterials), new { orderId = Model.SelectedOrderId, sortColumn = "difference" })">
                                    +/-
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.Label("Продукция", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (Model.OrderProducts.Any())
                    {
                        var orderProductIndex = 0;

                        foreach (var orderProduct in Model.OrderProducts)
                        {
                            orderProductIndex++;

                            var orderProductQuantity = orderProduct.OrderProductAddresses
                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                .Sum(s => s.Quantity);

                            var sizes = orderProduct.OrderProductAddresses
                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                .GroupBy(opas => opas.SizeId);

                            var productionSizes = orderProduct.OrderProductAddresses
                                .SelectMany(opa => opa.OrderProductAddressProductionDates)
                                .SelectMany(opapd => opapd.OrderProductAddressProductionDateSizes)
                                .GroupBy(opapds => opapds.SizeId);

                            var results = sizes.GroupJoin(productionSizes,
                                size => size.Key,
                                productionSize => productionSize.Key,
                                (size, productionSize) => new
                                {
                                    SizeId = size.Key,
                                    Quantity = size.Sum(s => s.Quantity),
                                    FinishedProductsQuantity = productionSize.SingleOrDefault(s => s.Key == size.Key) != null
                                        ? productionSize.Single(s => s.Key == size.Key).Sum(s => s.Quantity)
                                        : 0,
                                    Difference = productionSize.SingleOrDefault(s => s.Key == size.Key) != null
                                        ? productionSize.Single(s => s.Key == size.Key).Sum(s => s.Quantity) - size.Sum(s => s.Quantity)
                                        : 0 - size.Sum(s => s.Quantity)
                                });

                            var totalDifference = productionSizes.Sum(size => size.Sum(s => s.Quantity)) - sizes.Sum(size => size.Sum(s => s.Quantity));

                            <table class="table table-condensed table-bordered">
                                <tr class="active">
                                    <th>
                                        @orderProductIndex. @Html.DisplayFor(modelItem => orderProduct.Product.Name)
                                    </th>
                                </tr>
                                <tr class="active">
                                    <th>
                                        Заказ.Количество: @sizes.Sum(size => size.Sum(s => s.Quantity)),
                                        Готовая продукция.Количество: @productionSizes.Sum(size => size.Sum(s => s.Quantity)),

                                        @if (totalDifference != 0)
                                        {
                                            <strong>
                                                Итого:
                                            </strong>
                                            <strong class="text-danger">
                                                @totalDifference
                                            </strong>
                                        }
                                        else
                                        {
                                            <strong>
                                                Итого: @totalDifference
                                            </strong>
                                        }
                                    </th>
                                </tr>
                            </table>

                            <div class="form-group">
                                @Html.Label("Материалы", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    <table class="table table-condensed table-bordered">
                                        <tr class="active">
                                            <th>Наименование</th>
                                            <th>Норма расхода</th>
                                            <th>Поставлено</th>
                                            <th>Расход</th>
                                            <th>+/-</th>
                                        </tr>

                                        @if (orderProduct.OrderProductMaterials.Any())
                                        {
                                            IQueryable<OrderProductMaterial> orderProductMaterials = orderProduct.OrderProductMaterials.AsQueryable();

                                            if (Model.SelectedSortColumn == "name")
                                            {
                                                orderProductMaterials = orderProductMaterials.OrderBy(opm => opm.Material.Name);
                                            }

                                            if (Model.SelectedSortColumn == "difference")
                                            {
                                                orderProductMaterials = orderProductMaterials.OrderByDescending(opm => opm.OrderProductDeliveryMaterials.GroupBy(opdm => opdm.DeliveryId)
                                                    .Sum(delivery => delivery.Sum(d => d.AcceptanceQuantity)) - (productionSizes.Sum(size => size.Sum(s => s.Quantity)) * opm.Rate));
                                            }

                                            foreach (var orderProductMaterial in orderProductMaterials)
                                            {
                                                var deliveries = orderProductMaterial.OrderProductDeliveryMaterials.GroupBy(opdm => opdm.DeliveryId);
                                                var materialsQuantity = deliveries.Sum(delivery => delivery.Sum(d => d.AcceptanceQuantity.HasValue ? d.AcceptanceQuantity.Value : 0));
                                                var productionMaterialsQuantity = productionSizes.Sum(size => size.Sum(s => s.Quantity)) * orderProductMaterial.Rate;
                                                var difference = materialsQuantity - productionMaterialsQuantity;

                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => orderProductMaterial.Material.Name)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => orderProductMaterial.Rate)
                                                    </td>
                                                    <td>
                                                        @materialsQuantity
                                                    </td>
                                                    <td>
                                                        @productionMaterialsQuantity
                                                    </td>

                                                    @if (difference < 0)
                                                    {
                                                        <td>
                                                            <strong class="text-danger">
                                                                @difference
                                                            </strong>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @difference
                                                        </td>
                                                    }
                                                </tr>
                                            }

                                            <tr class="active">
                                                <th colspan="5">
                                                    Всего: @orderProduct.OrderProductMaterials.Count()
                                                </th>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr class="active">
                                                <td colspan="5">Нет материалов</td>
                                            </tr>
                                        }

                                    </table>
                                </div>
                            </div>
                        }

                        <table class="table table-condensed table-bordered">
                            <tr class="active">
                                <th>Всего</th>
                            </tr>
                        </table>

                        <div class="form-group">
                            @Html.Label("Материалы", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                @{
                                    var materials = Model.OrderProducts
                                        .SelectMany(op => op.OrderProductMaterials)
                                        .GroupBy(opm => opm.MaterialId);

                                    if (Model.SelectedSortColumn == "name")
                                    {
                                        materials = materials.OrderBy(m => Model.Materials[m.Key]);
                                    }

                                    if (Model.SelectedSortColumn == "difference")
                                    {
                                        materials = materials.OrderByDescending(m => m.Sum(opm => opm.OrderProductDeliveryMaterials.GroupBy(opdm => opdm.DeliveryId)
                                            .Sum(delivery => delivery.Sum(d => d.AcceptanceQuantity))) - (m.Sum(opm => opm.OrderProduct.OrderProductAddresses.SelectMany(opa => opa.OrderProductAddressProductionDates)
                                            .SelectMany(opapd => opapd.OrderProductAddressProductionDateSizes)
                                            .GroupBy(opapds => opapds.SizeId)
                                            .Sum(size => size.Sum(s => s.Quantity)) * opm.Rate)));
                                    }

                                    <table class="table table-condensed table-bordered">
                                        <tr class="active">
                                            <th>Наименование</th>
                                            <th>Поставлено</th>
                                            <th>Расход</th>
                                            <th>+/-</th>
                                        </tr>

                                        @if (materials.Any())
                                        {
                                            foreach (var material in materials)
                                            {
                                                var deliveries = material.SelectMany(m => m.OrderProductDeliveryMaterials).GroupBy(opdm => opdm.DeliveryId);
                                                var materialsQuantity = deliveries.Sum(delivery => delivery.Sum(d => d.AcceptanceQuantity.HasValue ? d.AcceptanceQuantity.Value : 0));

                                                var productionMaterialsQuantity = material.Sum(m => m.OrderProduct.OrderProductAddresses.SelectMany(opa => opa.OrderProductAddressProductionDates)
                                                    .SelectMany(opapd => opapd.OrderProductAddressProductionDateSizes)
                                                    .GroupBy(opapds => opapds.SizeId)
                                                    .Sum(size => size.Sum(s => s.Quantity)) * m.Rate);

                                                var difference = materialsQuantity - productionMaterialsQuantity;

                                                <tr>
                                                    <td>
                                                        @Model.Materials[material.Key]
                                                    </td>
                                                    <td>
                                                        @materialsQuantity
                                                    </td>
                                                    <td>
                                                        @productionMaterialsQuantity
                                                    </td>

                                                    @if (difference < 0)
                                                    {
                                                        <td>
                                                            <strong class="text-danger">
                                                                @difference
                                                            </strong>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @difference
                                                        </td>
                                                    }
                                                </tr>
                                            }

                                            <tr class="active">
                                                <th colspan="4">
                                                    Всего: @materials.Count()
                                                </th>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr class="active">
                                                <td colspan="45">Нет материалов</td>
                                            </tr>
                                        }

                                    </table>
                                }

                            </div>
                        </div>
                    }
                    else
                    {
                        <table class="table table-condensed table-bordered">
                            <tr class="active">
                                <td>Нет продукции</td>
                            </tr>
                        </table>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
