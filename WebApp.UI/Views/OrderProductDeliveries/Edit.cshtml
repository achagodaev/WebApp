@model WebApp.UI.ViewModels.OrderProductDeliveryViewModels.EditOrderProductDeliveryViewModel
@using WebApp.UI.Controllers

@{
    ViewBag.Title = "Поставка материалов продукции заказа. Редактирование";
}

<div class="row">
    <div class="col-md-12">
        <h4>Поставка материалов продукции заказа <small>Редактирование</small></h4>
        <hr />

        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Заказы", nameof(OrdersController.Index), 
                    nameof(OrdersController).Replace("Controller", ""))
            </li>
            <li>
                @Html.ActionLink(Model.OrderProduct.Order.Name, nameof(OrdersController.Details),
                    nameof(OrdersController).Replace("Controller", ""),
                    new { id = Model.OrderProduct.Order.Id }, 
                    null)
            </li>
            <li>
                @Html.ActionLink(Model.OrderProduct.Product.Name,
                    nameof(OrderProductsController.Details),
                    nameof(OrderProductsController).Replace("Controller", ""),
                    new
                    {
                        orderId = Model.OrderProduct.Order.Id,
                        productId = Model.OrderProduct.Product.Id
                    }, null)
            </li>
            <li>
                @Html.ActionLink($"Поставка материалов {Model.DeliveryId}",
                    nameof(OrderProductDeliveriesController.Details),
                    new
                    {
                        orderId = Model.OrderProduct.Order.Id,
                        productId = Model.OrderProduct.Product.Id,
                        deliveryId = Model.DeliveryId,
                    })
            </li>
            <li class="active">
                Редактирование
            </li>
        </ol>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
                @Html.HiddenFor(model => model.OrderProduct.Order.Id)
                @Html.HiddenFor(model => model.OrderProduct.Product.Id)
            
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProduct.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProduct.Order.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProduct.Product, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProduct.Product.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                     
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryImagePath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.AcceptanceId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AcceptanceId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AcceptanceId, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.AcceptanceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AcceptanceDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AcceptanceDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AcceptanceImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AcceptanceImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AcceptanceImagePath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProductDeliveryMaterials, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <p>
                            @Html.ActionLink("Добавить", nameof(OrderProductDeliveriesController.AddMaterialToOrderProductDelivery),
                                new
                                {
                                    orderId = Model.OrderProduct.Order.Id,
                                    productId = Model.OrderProduct.Product.Id,
                                    deliveryId = Model.DeliveryId
                                })
                        </p>
                        <table class="table table-condensed table-bordered">
                            @if (Model.OrderProductDeliveryMaterials.Any())
                            {
                                <tr class="active">
                                    <th>Наименование</th>
                                    <th>Поставка. Количество</th>
                                    <th>Приемка. Количество</th>
                                    <th></th>
                                </tr>
            
                                foreach (var orderProductDeliveryMaterial in Model.OrderProductDeliveryMaterials)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => orderProductDeliveryMaterial.Material.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => orderProductDeliveryMaterial.DeliveryQuantity)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => orderProductDeliveryMaterial.AcceptanceQuantity)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Удалить", nameof(OrderProductDeliveriesController.DeleteMaterialFromOrderProductDelivery),
                                                new
                                                {
                                                    orderId = Model.OrderProduct.Order.Id,
                                                    productId = Model.OrderProduct.Product.Id,
                                                    deliveryId = Model.DeliveryId,
                                                    materialId = orderProductDeliveryMaterial.Material.Id
                                                })
                                        </td>
                                    </tr>
                                }
            
                                <tr class="active">
                                    <th colspan="4">
                                        Всего: @Model.OrderProductDeliveryMaterials.Count()
                                    </th>
                                </tr>
                            }
                            else
                            {
                                <tr class="active">
                                    <th>Наименование</th>
                                    <th>Поставка. Количество</th>
                                    <th>Приемка. Количество</th>
                                </tr>
                                <tr class="active">
                                    <td colspan="3">Нет материалов</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Сохранить" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

