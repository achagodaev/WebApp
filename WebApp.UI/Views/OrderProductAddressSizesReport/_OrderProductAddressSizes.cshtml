@model WebApp.UI.ViewModels.ReportViewModels.OrderProductAddressSizesReportViewModel
@using WebApp.UI.Controllers

<div class="row">
    <div class="col-md-12">
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="btn-group">
                        @if (Model.SelectedOrderId == 0)
                        {
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Выберите заказ
                                <span class="caret"></span>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @Model.Orders[Model.SelectedOrderId]
                                <span class="caret"></span>
                            </button>
                        }
                        <ul class="dropdown-menu">
                            @foreach (var order in Model.Orders)
                            {
                                <li>
                                    <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#orderProductAddressSizes"
                                       href="@Url.Action(nameof(OrderProductAddressSizesReportController._OrderProductAddressSizes), new { orderId = order.Key, sortColumn = Model.SelectedSortColumn })">
                                        @order.Value
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>


            @if (Model.OrderProducts.Any())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedSortColumn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="btn-group">
                            @if (Model.SelectedSortColumn == "size")
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#orderProductAddressSizes" class="btn btn-primary"
                                   href="@Url.Action(nameof(OrderProductAddressSizesReportController._OrderProductAddressSizes), new { orderId = Model.SelectedOrderId, sortColumn = "size" })">
                                    Размер
                                </a>

                            }
                            else
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#orderProductAddressSizes" class="btn btn-default"
                                   href="@Url.Action(nameof(OrderProductAddressSizesReportController._OrderProductAddressSizes), new { orderId = Model.SelectedOrderId, sortColumn = "size" })">
                                    Размер
                                </a>
                            }

                            @if (Model.SelectedSortColumn == "quantity")
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#orderProductAddressSizes" class="btn btn-primary"
                                   href="@Url.Action(nameof(OrderProductAddressSizesReportController._OrderProductAddressSizes), new { orderId = Model.SelectedOrderId, sortColumn = "quantity" })">
                                    Количество
                                </a>

                            }
                            else
                            {
                                <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#orderProductAddressSizes" class="btn btn-default"
                                   href="@Url.Action(nameof(OrderProductAddressSizesReportController._OrderProductAddressSizes), new { orderId = Model.SelectedOrderId, sortColumn = "quantity" })">
                                    Количество
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }

        <div class="form-group">
            @Html.Label("Продукция", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (Model.OrderProducts.Any())
                {
                    var orderProductIndex = 0;

                    foreach (var orderProduct in Model.OrderProducts)
                    {
                        orderProductIndex++;

                        <table class="table table-condensed table-bordered">
                            <tr class="active">
                                <th>
                                    @orderProductIndex. @Html.DisplayFor(modelItem => orderProduct.Product.Name)
                                </th>
                            </tr>
                        </table>

                        <div class="form-group">
                            @Html.Label("Грузополучатели", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                @{
                                    var addresses = orderProduct.OrderProductAddresses.SelectMany(opa => opa.OrderProductAddressSizes)
                                        .GroupBy(opas => opas.AddressId);

                                    int addressIndex = 0;

                                    if (addresses.Any())
                                    {
                                        foreach (var address in addresses)
                                        {
                                            addressIndex++;

                                            <table class="table table-condensed table-bordered">
                                                <tr class="active">
                                                    <th>
                                                        @addressIndex. @Model.Addresses[address.Key]
                                                    </th>
                                                </tr>
                                                <tr class="active">
                                                    <th>
                                                        Дата поставки: @orderProduct.OrderProductAddresses.Single(opa => opa.AddressId == address.Key).DeliveryDate.ToShortDateString()
                                                    </th>
                                                </tr>
                                            </table>

                                            <div class="form-group">
                                                @Html.Label("Размерные данные", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">

                                                    @{
                                                        var sizes = address.GroupBy(opas => opas.SizeId);

                                                        if (Model.SelectedSortColumn == "size")
                                                        {
                                                            sizes = sizes.OrderBy(opas => opas.Key);
                                                        }

                                                        if (Model.SelectedSortColumn == "quantity")
                                                        {
                                                            sizes = sizes.OrderByDescending(opas => opas.Sum(s => s.Quantity));
                                                        }

                                                        <table class="table table-condensed table-bordered">
                                                            <tr class="active">
                                                                <th>Размер</th>
                                                                <th>Количество</th>
                                                            </tr>

                                                            @if (sizes.Any())
                                                            {
                                                                foreach (var size in sizes)
                                                                {
                                                                    <tr>
                                                                        <td>
                                                                            @Model.Sizes[size.Key]
                                                                        </td>
                                                                        <td>
                                                                            @size.Sum(s => s.Quantity)
                                                                        </td>
                                                                    </tr>
                                                                }

                                                                <tr class="active">
                                                                    <th>
                                                                        Всего: @sizes.Count()
                                                                    </th>
                                                                    <th>
                                                                        @sizes.Sum(size => size.Sum(s => s.Quantity))
                                                                    </th>
                                                                </tr>
                                                            }
                                                            else
                                                            {
                                                                <tr class="active">
                                                                    <td colspan="2">Нет размерных данных</td>
                                                                </tr>
                                                            }

                                                        </table>
                                                    }

                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <table class="table table-condensed table-bordered">
                                            <tr class="active">
                                                <td>Нет продукции</td>
                                            </tr>
                                        </table>
                                    }
                                }

                                <table class="table table-condensed table-bordered">
                                    <tr class="active">
                                        <th>Всего</th>
                                    </tr>
                                </table>

                                <div class="form-group">
                                    @Html.Label("Размерные данные", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">

                                        @{
                                            var _sizes = orderProduct.OrderProductAddresses
                                                .SelectMany(opa => opa.OrderProductAddressSizes)
                                                .GroupBy(opas => opas.SizeId);

                                            if (Model.SelectedSortColumn == "size")
                                            {
                                                _sizes = _sizes.OrderBy(opas => opas.Key);
                                            }
                                            else if (Model.SelectedSortColumn == "quantity")
                                            {
                                                _sizes = _sizes.OrderByDescending(opas => opas.Sum(s => s.Quantity));
                                            }

                                            <table class="table table-condensed table-bordered">
                                                <tr class="active">
                                                    <th>Размер</th>
                                                    <th>Количество</th>
                                                </tr>

                                                @if (_sizes.Any())
                                                {
                                                    foreach (var size in _sizes)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Model.Sizes[size.Key]
                                                            </td>
                                                            <td>
                                                                @size.Sum(s => s.Quantity)
                                                            </td>
                                                        </tr>
                                                    }

                                                    <tr class="active">
                                                        <th>
                                                            Всего: @_sizes.Count()
                                                        </th>
                                                        <th>
                                                            @_sizes.Sum(size => size.Sum(s => s.Quantity))
                                                        </th>
                                                    </tr>
                                                }
                                                else
                                                {
                                                    <tr class="active">
                                                        <td colspan="2">Нет размерных данных</td>
                                                    </tr>
                                                }

                                            </table>
                                        }

                                    </div>
                                </div>

                            </div>
                        </div>
                    }
                }
                else
                {
                    <table class="table table-condensed table-bordered">
                        <tr class="active">
                            <td>Нет продукции</td>
                        </tr>
                    </table>
                }

            </div>
        </div>

        </div>
    </div>
</div>
