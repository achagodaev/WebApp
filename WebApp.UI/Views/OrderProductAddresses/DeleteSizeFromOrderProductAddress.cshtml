@model WebApp.UI.ViewModels.OrderProductAddressViewModels.DeleteSizeFromOrderProductAddressViewModel
@using WebApp.UI.Controllers

@{
    ViewBag.Title = $"{Html.DisplayNameFor(model => model.OrderProductAddress)}. {Html.DisplayNameForModel()}";
}

<div class="row">
    <div class="col-md-12">
        <h4>@Html.DisplayNameFor(model => model.OrderProductAddress) <small>@Html.DisplayNameForModel()</small></h4>
        <hr />

        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Заказы", nameof(OrdersController.Index),
                    nameof(OrdersController).Replace("Controller", ""))
            </li>
            <li>
                @Html.ActionLink(Model.OrderProductAddress.OrderProduct.Order.Name,
                    nameof(OrdersController.Details),
                    nameof(OrdersController).Replace("Controller", ""),
                    new { id = Model.OrderProductAddress.OrderProduct.Order.Id },
                    null)
            </li>
            <li>
                @Html.ActionLink(Model.OrderProductAddress.OrderProduct.Product.Name,
                    nameof(OrderProductsController.Details),
                    nameof(OrderProductsController).Replace("Controller", ""),
                    new
                    {
                        orderId = Model.OrderProductAddress.OrderProduct.Order.Id,
                        productId = Model.OrderProductAddress.OrderProduct.Product.Id
                    }, null)
            </li>
            <li>
                @Html.ActionLink(Model.OrderProductAddress.Address.Name,
                    nameof(OrderProductAddressesController.Details),
                    new
                    {
                        orderId = Model.OrderProductAddress.OrderProduct.Order.Id,
                        productId = Model.OrderProductAddress.OrderProduct.Product.Id,
                        addressId = Model.OrderProductAddress.Address.Id
                    })
            </li>
            <li>
                @Html.ActionLink("Редактирование",
                    nameof(OrderProductAddressesController.Edit),
                    new
                    {
                        orderId = Model.OrderProductAddress.OrderProduct.Order.Id,
                        productId = Model.OrderProductAddress.OrderProduct.Product.Id,
                        addressId = Model.OrderProductAddress.Address.Id
                    })
            </li>
            <li class="active">
                @Html.DisplayNameForModel()
            </li>
        </ol>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.OrderProductAddress.OrderProduct.Order.Id)
                @Html.HiddenFor(model => model.OrderProductAddress.OrderProduct.Product.Id)
                @Html.HiddenFor(model => model.OrderProductAddress.Address.Id)
                @Html.HiddenFor(model => model.Size.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProductAddress.OrderProduct.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProductAddress.OrderProduct.Order.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProductAddress.OrderProduct.Product, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProductAddress.OrderProduct.Product.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProductAddress.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProductAddress.Address.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Удалить" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>