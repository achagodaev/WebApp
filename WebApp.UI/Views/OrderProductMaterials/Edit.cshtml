@model WebApp.UI.ViewModels.OrderProductMaterialViewModels.EditOrderProductMaterialViewModel
@using WebApp.UI.Controllers

@{
    ViewBag.Title = "Материал продукции заказа. Редактирование";
}

<div class="row">
    <div class="col-md-12">
        <h4>Материал продукции заказа <small>Редактирование</small></h4>
        <hr />

        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Заказы", nameof(OrdersController.Index), 
                    nameof(OrdersController).Replace("Controller", ""))
            </li>
            <li>
                @Html.ActionLink(Model.OrderProduct.Order.Name, nameof(OrdersController.Details),
                    nameof(OrdersController).Replace("Controller", ""),
                    new { id = Model.OrderProduct.Order.Id }, null)
            </li>
            <li>
                @Html.ActionLink(Model.OrderProduct.Product.Name,
                    nameof(OrderProductsController.Details),
                    nameof(OrderProductsController).Replace("Controller", ""),
                    new
                    {
                        orderId = Model.OrderProduct.Order.Id,
                        productId = Model.OrderProduct.Product.Id
                    }, null)
            </li>
            <li>
                @Html.ActionLink(Model.Material.Name,
                    nameof(OrderProductMaterialsController.Details),
                    new
                    {
                        orderId = Model.OrderProduct.Order.Id,
                        productId = Model.OrderProduct.Product.Id,
                        MaterialId = Model.Material.Id,
                    })
            </li>
            <li class="active">
                Редактирование
            </li>
        </ol>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
                @Html.HiddenFor(model => model.OrderProduct.Order.Id)
                @Html.HiddenFor(model => model.OrderProduct.Product.Id)
                @Html.HiddenFor(model => model.Material.Id)
            
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProduct.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProduct.Order.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderProduct.Product, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderProduct.Product.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Material.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.SupplierId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SupplierId, Model.AvailableSuppliers, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                    </div>
                </div>         
            
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Сохранить" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

